package lab3.controller;

import lab3.entity.Users;
import lab3.services.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/user") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserService userService;

    @PostMapping(path="/signup", consumes = MediaType.APPLICATION_JSON_VALUE)
    public @ResponseBody String addNewUser (@RequestBody Users user){
        System.out.println("User in addNewUser" + user.getUsername());
        userService.save(user);
        return "success";
    }

    @PostMapping(path="/login", consumes = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Users> login (@RequestBody Users user  ){
        System.out.println("User in login" + user.getUsername() + " " + user.getPassword());
        String username = user.getUsername();
        String password = user.getPassword();
        return new ResponseEntity(userService.login(username, password), HttpStatus.OK);
    }

    @PostMapping(path="/getprofile", consumes = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Users> getProfile (@RequestBody Users user  ){
        System.out.println("User in getprofile" + user.getUsername());
        String username = user.getUsername();
        return new ResponseEntity(userService.getProfile(username), HttpStatus.OK);
    }

    @PostMapping(path="/updateprofile", consumes = MediaType.APPLICATION_JSON_VALUE)
    public @ResponseBody String updateProfile (@RequestBody Users user  ){
        System.out.println("Usercontroller in updateProfile");
        String username = user.getUsername();
        String response = userService.updateUserProfile(username, user);
        return response;
    }



}